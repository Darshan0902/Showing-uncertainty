# Basic confidence intervals

Create the lower and upper 95% interval boundaries:
Create the lower boundary by subtracting 1.96 standard errors ('std_err') from the 'mean' of estimates.
Create the upper boundary by adding 1.96 standard errors ('std_err') to the 'mean' of estimates.
Pass pollutant as the faceting variable to sns.FacetGrid() and unlink the x-axes of the plots so intervals are all well-sized.
Pass the constructed interval boundaries to the mapped plt.hlines() function.

```
# Construct CI bounds for averages
average_ests['lower'] = average_ests['mean'] - 1.96*average_ests['std_err']
average_ests['upper'] = average_ests['mean'] + 1.96*average_ests['std_err']

# Setup a grid of plots, with non-shared x axes limits
g = sns.FacetGrid(average_ests, row = 'pollutant', sharex = False)

# Plot CI for average estimate
g.map(plt.hlines, 'y', 'lower', 'upper')

# Plot observed values for comparison and remove axes labels
g.map(plt.scatter, 'seen', 'y', color = 'orangered').set_ylabels('').set_xlabels('') 

plt.show()

```

OUTPUT :

https://github.com/Darshan0902/Showing-uncertainty/blob/main/image.png?raw=true 



<h2> Annotating confidence intervals </h2>

<br> Provide starting and ending limits (columns lower and upper) for your confidence intervals to plt.hlines().
<br> Set interval thickness to 5.
<br> Draw a vertical line representing a difference of 0 with plt.axvline().
<br> Color the null line 'orangered' to make it stand out.

```
# Set start and ends according to intervals 
# Make intervals thicker
plt.hlines(y = 'year', xmin = 'lower', xmax = 'upper', 
           linewidth = 5, color = 'steelblue', alpha = 0.7,
           data = diffs_by_year)
# Point estimates
plt.plot('mean', 'year', 'k|', data = diffs_by_year)

# Add a 'null' reference line at 0 and color orangered
plt.axvline(x = 0 , color = 'orangered', linestyle = '--')

# Set descriptive axis labels and title
plt.xlabel('95% CI')
plt.title('Avg SO2 differences between Cincinnati and Indianapolis')
plt.show()
```


OUTPUT : 


https://raw.githubusercontent.com/Darshan0902/Showing-uncertainty/563c9718cba9bd08329757e5fb243e6d862b83fd//image-2.png

# Making a confidence band :


1. Construct upper and lower 99% interval bands by adding and subtracting 2.58 standard errors from the mean.
2. Make the point-estimate line white.
3. Make the point-estimate line semi-transparent by setting alpha to 0.4.
4. Tell plt.fill_between() what values to fill between for each day.


Code:

```
# Draw 99% inverval bands for average NO2
vandenberg_NO2['lower'] = vandenberg_NO2['mean'] - 2.58*vandenberg_NO2['std_err']
vandenberg_NO2['upper'] = vandenberg_NO2['mean'] + 2.58*vandenberg_NO2['std_err']

# Plot mean estimate as a white semi-transparent line
plt.plot('day', 'mean', data = vandenberg_NO2,
         color = 'white', alpha = 0.4)

# Fill between the upper and lower confidence band values
plt.fill_between(x = 'day', 
                 y1 = 'lower', y2 = 'upper', 
                 data = vandenberg_NO2)

plt.show()
```

output : 

https://raw.githubusercontent.com/Darshan0902/Showing-uncertainty/563c9718cba9bd08329757e5fb243e6d862b83fd//image-3.png


